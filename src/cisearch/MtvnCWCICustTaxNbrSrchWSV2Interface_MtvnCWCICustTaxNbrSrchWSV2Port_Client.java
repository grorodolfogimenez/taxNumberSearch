
package cisearch;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.security.SecureRandom;
import java.security.cert.X509Certificate;
import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.net.ssl.*;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2017-05-09T09:04:30.476-04:00
 * Generated source version: 3.1.11
 * 
 */
public final class MtvnCWCICustTaxNbrSrchWSV2Interface_MtvnCWCICustTaxNbrSrchWSV2Port_Client {


    private MtvnCWCICustTaxNbrSrchWSV2Interface_MtvnCWCICustTaxNbrSrchWSV2Port_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = MtvnCWCICustTaxNbrSrchWSV2.WSDL_LOCATION;

        try {
            TrustManager[] trustAllCerts = { new X509TrustManager() {
                public X509Certificate[] getAcceptedIssuers() {
                    return null;
                }

                public void checkClientTrusted(X509Certificate[] certs,
                                               String authType) {
                }

                public void checkServerTrusted(X509Certificate[] certs,
                                               String authType) {
                }
            } };
            SSLContext sc = SSLContext.getInstance("SSL");

            HostnameVerifier hv = new HostnameVerifier() {
                public boolean verify(String arg0, SSLSession arg1) {
                    return true;
                }
            };
            sc.init(null, trustAllCerts, new SecureRandom());

            HttpsURLConnection
                    .setDefaultSSLSocketFactory(sc.getSocketFactory());
            HttpsURLConnection.setDefaultHostnameVerifier(hv);
        } catch (Exception localException) {
            localException.printStackTrace();
        }

      
        MtvnCWCICustTaxNbrSrchWSV2 ss = new MtvnCWCICustTaxNbrSrchWSV2();
        MtvnCWCICustTaxNbrSrchWSV2Interface port = ss.getMtvnCWCICustTaxNbrSrchWSV2Port();  
        
        {
        System.out.println("Invoking ciCustTaxNbrSrch...");

            CICustTaxNbrSrchMtvnSvcReq request = new CICustTaxNbrSrchMtvnSvcReq();
            request.setMsgUUID(java.util.UUID.randomUUID().toString());
            CICustTaxNbrSrchMtvnSvcReq.PrcsParms parms = new CICustTaxNbrSrchMtvnSvcReq.PrcsParms();
            parms.setSrcID("DAO013");

            request.setPrcsParms(parms);
            //messagePart.getSvc().
            CICustTaxNbrSrchMtvnSvcReq.Svc svc = new CICustTaxNbrSrchMtvnSvcReq.Svc();
            CICustTaxNbrSrchMtvnSvcReq.Svc.Security security = new CICustTaxNbrSrchMtvnSvcReq.Svc.Security();
            CICustTaxNbrSrchMtvnSvcReq.Svc.Security.BasicAuth basicAuth = new CICustTaxNbrSrchMtvnSvcReq.Svc.Security.BasicAuth();
            basicAuth.setUsrID("W415991");
            basicAuth.setPwd("Gro04@17");
            security.setBasicAuth(basicAuth);
            svc.setSecurity(security);
            CICustTaxNbrSrchMtvnSvcReq.Svc.SvcParms svcParms = new CICustTaxNbrSrchMtvnSvcReq.Svc.SvcParms();
            svcParms.setApplID("CI");
            svcParms.setRqstUUID(java.util.UUID.randomUUID().toString());
            svcParms.setRoutingID("415");
            svcParms.setSvcID("CICustTaxNbrSrch");
            svcParms.setSvcVer("2.0");
            svc.setSvcParms(svcParms);

            CICustTaxNbrSrchReqData reqData = new CICustTaxNbrSrchReqData();
            reqData.setE10202("690055315");
            reqData.setE10292("I");

            CICustTaxNbrSrchMtvnSvcReq.Svc.MsgData msgData = new CICustTaxNbrSrchMtvnSvcReq.Svc.MsgData();
            msgData.setCICustTaxNbrSrchReqData(reqData);
            svc.setMsgData(msgData);

            request.getSvc().add(svc);
            request.setMsgUUID(java.util.UUID.randomUUID().toString());


        cisearch.CICustTaxNbrSrchMtvnSvcRes response = port.ciCustTaxNbrSrch(request);


            for (CICustTaxNbrSrchMtvnSvcRes.Svc svcResponse :
                    response.getSvc()
                 ) {

                List<CICustTaxNbrSrchResData.CICustInfoLst.CICustInfo> ciCustInfo =
                        svcResponse.getMsgData().getCICustTaxNbrSrchResData().getCICustInfoLst().getCICustInfo();
                for (CICustTaxNbrSrchResData.CICustInfoLst.CICustInfo custInfoRecord: ciCustInfo
                     ) {
                    System.out.println(
                         custInfoRecord.getE10033()
                    );
                }

            }


        System.out.println("ciCustTaxNbrSrch.result=" + response);


        }

        System.exit(0);
    }

}
